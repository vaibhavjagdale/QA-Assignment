## Test Plan: Restaurant filtering feature

# INTRODUCTION:
Feature Testing on newly developed Restaurant filtering feature.

# Prerequisites
- All the restaurant information including Best Match,Ratings,Distance, Delivery cost/time, min order amount and product price should be updated in the system.

# Objectives
- Ensure the Application Under Test conforms to functional and non-functional requirements.
- Ensure the AUT meets the quality specifications defined by the client.
- Bugs/issues are identified and fixed before go live.

# Scope
- In scope: Functional and non-functional testing of Restaurant filtering requirements.

# Testing Strategy
- Unit testing - By developers
- Integration and Ssytem test - QA Team
- Non-Functional testing - QA Team
- Acceptance testing - PO/BA/Users

# Test environment
  - DEV
  - Staging/Release
  - Pre-prod
  - Prod

# Resources/Roles & Responsibilities
  Developers
  QA Analyst
  PO
  Installation Team

# Schedules
# Approvals

--------------------------------------------------------------------------------------------------------
## Test cases

# Feature Testing.

TC1: Sorting restaurant lists with rating, distance, delivery cost-time, minimum order amount and offers and savings
Given user navigates to the website and logs in with valid credentials.
When the user applies a restaurant filter with different options.
Then the restaurant list updates accordingly.

TC2: Validate restaurant list with location
Given user navigates to the website and login with valid credentials.
When the user changes the delivery address
Then the restaurant list updates accordingly.

TC3: Validate user order delivery with restaurant filter
Given user navigates to the website and login with valid credentials.
When the user applies any restaurant filter
And user selects a restaurant and completes the order.
Then the user order should be successful.

TC4: Validate user pickup order with restaurant filter
Given user navigates to the website and login with valid credentials.
When the user applies any restaurant filter
And user selects a restaurant and completes the order.
Then the user pickup order should be successful.

TC5: Add the restaurant to the user's favorite list.
Given user navigates to the website and login with valid credentials.
When the user add restaurant to the user's favorite list.
Then restaurant should be successfully added.

TC6: Validate List and Map view with restaurant filter .
Given user navigates to the website and login with valid credentials.
When the user applies a restaurant filter with different options.
And the user change map and list view.
Then view should be updates accordingly.

TC6: Validate open now and free delivery with restaurant filter
Given user navigates to the website and login with valid credentials.
When the user applies any restaurant filter
And user selects open now and free delivery options .
Then the restaurant list updates accordingly.

## negative tests ##

TC1: Validate unsuccessful order with restaurant filter and location
Given user navigates to the website and login with valid credentials.
When the user applies a restaurant filter with different options and location not within range.
Then user not able to order delivery.

TC2: Validate unsuccessful order with restaurant filter and below min order amount
Given user navigates to the website and login with valid credentials.
When the user applies a restaurant filter with different options and min order amount.
Then user not able to order delivery.

## Note: More test cases should be designed with the help of a complete understanding of the restaurant filter
 and the below ISTQB test design technique.
 - Equivalent Class Partitioning. 
 - Boundary Value Analysis.
 - Decision tables
 - Error Guessing

## Smoke/Regression Testing
 - Execute all automated tests and perform smoke testing in order to check the desired code 
changes don't have any impact on existing functionality.

## Explolatory Testing
 - Perform in order to uncover hidden bug/edge cases/negative flow and improve test coverage.

# Non-Functional Testing
- Perform non-functional testing if required.
---------------------------------------------------------------------------------------------------------------

Note:
1. I completed the assignment within one day.
2. Please let me know if you have any feedback, improvements or remarks.I am very eager to address and improve.